#!/usr/bin/env bash

################################################################################
#										#
#    TMCrys version 0.1								#
#    Copyright 2017 Julia Varga and G치bor E. Tusn치dy				#
#										#
#    If you use TMCrys, please cite: 						#
#    Julia Varga and G치bor E. Tusn치dy TMCRys...					#
#										#
#										#
#    This file is part of TMCrys.						#
#										#
#    TMCrys is free software: you can redistribute it and/or modify		#
#    it under the terms of the GNU General Public License as published by	#
#    the Free Software Foundation, either version 3 of the License, or		#
#    (at your option) any later version.					#
#										#
#    TMCrys is distributed in the hope that it will be useful,			#
#    but WITHOUT ANY WARRANTY; without even the implied warranty of		#
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the		#
#    GNU General Public License for more details.				#
#										#
#    You should have received a copy of the GNU General Public License		#
#    along with TMCrys.  If not, see <http://www.gnu.org/licenses/>.		#
#										#
#################################################################################

HELP="
TMCrys version 0.1\n
\n
Usage: tmcrys (-s <TABFILE> | -d <CCTOPDIR> | -i <CCTOPFILE>) --wd <WDDIR> -n <NETFILE> [--name project] [-h] [--version] [--test]\n
\n
	-i 		CCTOP file with single entry\n
	-d 		directory with CCTOP files\n
	-s 		file with 'id seq top'\n
	Either -s or -i or -d required.\n
\n
	
	--wd		working directory
	-n 		NetSurfP results file (.rsa)\n
	--name		required for CCTOP directories - name for output files without extensions\n
	-h|--help 	print this help and exit\n
	--version 	print version and exit\n
	\n
	OR\n
	--test		Test the program (no other option required, working directory will be ./test)\n
\n
"
if [ $# -eq 0 ]
  then
    echo -e $HELP
    exit
fi


POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -s)
    TABFILE="$2"
    shift # past argument
    shift # past value
    ;;
    -d)
    CCTOPDIR="$2"
    shift # past argument
    shift # past value
    ;;
    -i)
    CCTOPFILE="$2"
    shift # past argument
    shift # past value
    ;;
    -n)
    NETFILE="$2"
    shift # past argument
    ;;
    --wd)
    TMPDIR="$2"
    shift # past argument
    shift # past value
    ;;    
    --version)
    echo "TMCrys version 0.1"
    exit
    ;;
    --help|-h)
    echo -e $HELP
    exit
    ;;
    --name)
    name="$2"
    shift # past argument
    shift # past value
    ;;
    --test)
    TEST=1
    shift # past argument
    shift # past value
    ;;

esac
done


if [[ $TEST ]]; then
	WDDIR="$TMCRYS/test"
	NETFILE="$TMCRYS/test"
	SUCCESS=1
	
	echo "Creating features..."
	echo "CCTOPDIR"
	$TMCRYS/tools/sequenceFeatures.pl -d "$WDDIR/cctop" -n "$NETFILE/testdir.rsa" -f > "$WDDIR/testdir.features"
	
	
	echo -e  "\nSpace delimited file"
	$TMCRYS/tools/sequenceFeatures.pl -s "$WDDIR/test.txt" -n "$NETFILE/testtxt.rsa" -f > "$WDDIR/testtxt.features"

	echo -e "\nCCTOP XML file"
	$TMCRYS/tools/sequenceFeatures.pl -i "$WDDIR/O14983.xml" -n "$NETFILE/testxml.rsa" -f > "$WDDIR/testxml.features"
	echo "P45880 is not transmembrane protein, should be left out twice."
	
	echo -e "\nPredicting..."
	Rscript $TMCRYS/tools/prediction.R -i $WDDIR/testdir.features -o $WDDIR/testdir.prediction --verbose
	Rscript $TMCRYS/tools/prediction.R -i $WDDIR/testtxt.features -o $WDDIR/testtxt.prediction --verbose
	Rscript $TMCRYS/tools/prediction.R -i $WDDIR/testxml.features -o $WDDIR/testxml.prediction --verbose
	echo "Prediction done."
	 
	echo -e "\nComparing results..."
	if [[ $(cmp --silent $WDDIR/testdir.prediction $WDDIR/testdir.prediction.sample || echo 0) ]]; then
		echo "Not working with CCTOP directories"
		SUCCESS=0
	fi
	
	if [[ $(cmp --silent $WDDIR/testtxt.prediction $WDDIR/testtxt.prediction.sample || echo 0) ]]; then
		echo "Not working with space delimited files"
		SUCCESS=0
	fi
	
	if [[ $(cmp --silent $WDDIR/testxml.prediction $WDDIR/testxml.prediction.sample || echo 0) ]]; then
		echo "Not working with CCTOP files" 
		SUCCESS=0
	fi

	if [[ $SUCCESS -eq 1 ]]; then
		echo
		echo "Test ok"
	else
		echo
		echo "There were some problems, please check that everything is installed!"
	fi

	exit
fi


if [[ ! -d "$NETFILE" ]]; then
	echo "Please specify valid path to NetSurfP directory!"
	exit
fi

if [[ ! -d "$WDDIR" ]]; then
	echo "Please specify valid path to working directory!"
	exit
fi




if [[ "$CCTOPDIR" != "" ]]; then
	if [[! -d "$CCTOPDIR" ]]; then
		echo "Please specify valid path to directory containing CCTOP XMLs!"
	else	
		$TMCRYS/tools/sequenceFeatures.pl -d "$CCTOPDIR" -n "$NETFILE" > $WDDIR/$name.features
	fi
fi

if [[ "$TABFILE" != ""]]; then 
	if [[ ! -f "$TABFILE" ]]; then
		echo "Please specify valid path to space delimited file: 'id sequence topology'!"
	else
		name=$(basename $CCTOPFILE ".txt")
		$TMCRYS/tools/sequenceFeatures.pl -s "$TABFILE" -n "$NETFILE" > $WDDIR/$name.features
	fi
fi

if [[ "$CCTOPFILE" != "" ]]; then
	if [[! -f "CCTOPFILE" ]]; then
		echo "Please specify valid path to a CCTOP XML!"
	else
		name=$(basename $CCTOPFILE ".xml")
		$TMCRYS/tools/sequenceFeatures.pl -i "$CCTOPFILE" -n "$NETFILE" > $WDDIR/$name.features
	fi
fi

Rscript $TMCRYS/tools/prediction.R.R -i $WDDIR/$name.features -o $WDDIR/$name.prediction --verbose






